<?xml version="1.0" encoding="UTF-8" ?>

<!DOCTYPE mapper
		PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
		"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="CommunityMapper">

	<resultMap id="communitySelectMap" type="community">
		<result property="member.memberId" 	column="MEMBER_ID" 			jdbcType="VARCHAR"/>
		<result property="member.nickname"	column="NICKNAME"			jdbcType="VARCHAR"/>
		<result property="postNo" 			column="POST_NO" 			jdbcType="NUMERIC"/>
		<result property="postTitle"		column="POST_TITLE" 		jdbcType="VARCHAR"/>
		<result property="postText" 		column="POST_TEXT" 			jdbcType="VARCHAR"/>
		<result property="streetAddress" 	column="STREET_ADDRESS" 	jdbcType="VARCHAR"/>
		<result property="areaAddress" 		column="AREA_ADDRESS" 		jdbcType="VARCHAR"/>
		<result property="restAddress" 		column="REST_ADDRESS" 		jdbcType="VARCHAR"/>
		<result property="latitude" 		column="LATITUDE" 			jdbcType="VARCHAR"/>
		<result property="longitude" 		column="LONGITUDE" 			jdbcType="VARCHAR"/>
		<result property="restaurantName" 	column="RESTAURANT_NAME" 	jdbcType="VARCHAR"/>
		<result property="restaurantTel" 	column="RESTAURANT_TEL" 	jdbcType="VARCHAR"/>
		<result property="receiptImage" 	column="RECEIPT_IMAGE" 		jdbcType="VARCHAR"/>
		<result property="postRegDate" 		column="POST_REG_DATE" 		jdbcType="DATE"/>
		<result property="postShowStatus" 	column="POST_SHOW_STATUS" 	jdbcType="BOOLEAN"/>
		<result property="officialDate" 	column="OFFICIAL_DATE" 		jdbcType="DATE"/>
		<result property="menuType" 		column="MENU_TYPE" 			jdbcType="NUMERIC"/>
		<result property="mainMenuTitle" 	column="MAIN_MENU_TITLE" 	jdbcType="VARCHAR"/>
		<result property="mainMenuPrice" 	column="MAIN_MENU_PRICE" 	jdbcType="NUMERIC"/>
	
	<!-- 	<association property="memberId" jdbcType="member">
			<id property = "memberId" column="member_id" jdbcType="VARCHAR"/>
		</association> -->
		
		<collection property="restaurantTimes" resultMap="timeSelectMap"></collection>
		<collection property="postImage" ofType="String" javaType="list">
			<result column="image" />
		</collection>
		<!-- <collection property="restaurant" resultMap="restaurantSelectMap"></collection> -->
	
	</resultMap>
	
	<resultMap id="timeSelectMap" type="com.zzupzzup.service.domain.RestaurantTime">
		<result property="restaurantTimeNo" column="RESTAURANT_TIME_NO" />
		<result property="community.postNo" column="POST_NO" />
		<result property="restaurant.restaurantNo" column="RESTAURANT_NO" />
		<result property="restaurantDay" column="RESTAURANT_DAY" />
		<result property="restaurantOpen" column="RESTAURANT_OPEN" />
		<result property="restaurantClose" column="RESTAURANT_CLOSE" />
		<result property="restaurantBreak" column="RESTAURANT_BREAK" />
		<result property="restaurantLastOrder" column="RESTAURANT_LAST" />
		<result property="restaurantDayOff" column="RESTAURANT_DAY_OFF" />
	</resultMap>
	
	<resultMap id="markSelectMap" type="com.zzupzzup.service.domain.Mark">
		<result property="markNo" column="MARK_NO" jdbcType="NUMERIC" />
		<result property="memberId" column="MEMBER_ID" jdbcType="VARCHAR" />
		<result property="postNo" column="POST_NO" jdbcType="NUMERIC" />
	</resultMap>
	
	<!-- <resultMap id="restaurantSelectMap" type="com.zzupzzup.service.domain.Restaurant">
		<result property="reservationStatus" column="RESERVATION_STATUS" />
		<result property="restaurantRegDate" column="RESTAURANT_REG_DATE" />
	</resultMap> -->
	
	
	<!-- SQL : INSERT -->
	<insert		id="addCommunity"	parameterType="community" useGeneratedKeys="true" keyProperty="postNo">
		INSERT
		INTO COMMUNITY(MEMBER_ID, NICKNAME, POST_TITLE, POST_TEXT, RESTAURANT_NAME, RESTAURANT_TEL,
		STREET_ADDRESS, AREA_ADDRESS, REST_ADDRESS, LATITUDE, LONGITUDE, MENU_TYPE, RECEIPT_IMAGE, MAIN_MENU_TITLE, MAIN_MENU_PRICE)
		VALUES ( #{member.memberId}, #{member.nickname}, #{postTitle}, #{postText}, #{restaurantName}, #{restaurantTel},
		#{streetAddress}, #{areaAddress}, #{restAddress}, #{latitude}, #{longitude}, #{menuType}, #{receiptImage}, #{mainMenuTitle}, #{mainMenuPrice})
	</insert>
	
	<insert 	id="addRestaurantTime"	parameterType="community" >
	
		DELETE FROM RESTAURANT_TIME WHERE POST_NO = #{postNo};
	
		INSERT
		INTO RESTAURANT_TIME(POST_NO, RESTAURANT_DAY, RESTAURANT_OPEN, RESTAURANT_CLOSE,
		RESTAURANT_BREAK, RESTAURANT_LAST, RESTAURANT_DAY_OFF)
		VALUES
		<foreach collection="restaurantTimes" item="item" separator=",">
			(#{postNo}, #{item.restaurantDay}, #{item.restaurantOpen}, #{item.restaurantClose},
			#{item.restaurantBreak}, #{item.restaurantLastOrder}, #{item.restaurantDayOff})
		</foreach>
	</insert>
	
	<insert		id="addImage"	parameterType="community">
	
		DELETE FROM IMAGE WHERE POST_NO = #{postNo};
		
		INSERT
		INTO IMAGE(POST_NO, IMAGE)
		VALUES
		<foreach collection="postImage" item="item" separator=",">
			(#{postNo}, #{item})
		</foreach>
	</insert>
	
	
	<!-- SQL : SELECT ONE -->
	<select 	id="getCommunity"	parameterType="int" resultMap="communitySelectMap">
		SELECT *
		FROM COMMUNITY AS cn
		LEFT OUTER JOIN (SELECT * FROM RESTAURANT_TIME) AS rt
		ON (cn.POST_NO = rt.POST_NO)
		LEFT OUTER JOIN (SELECT * FROM IMAGE) AS img
		ON (cn.POST_NO = img.POST_NO)
		WHERE cn.POST_NO = #{value};
	</select>
	
	
	<!-- SQL : UPDATE -->
	<update 	id="updateCommunity"	parameterType="community">
		UPDATE COMMUNITY
		<set>
			POST_TITLE = #{postTitle},
			POST_TEXT = #{postText},
			RESTAURANT_NAME = #{restaurantName},
			RESTAURANT_TEL = #{restaurantTel},
			STREET_ADDRESS = #{streetAddress},
			AREA_ADDRESS = #{areaAddress},
			MENU_TYPE = #{menuType},
			MAIN_MENU_TITLE = #{mainMenuTitle},
			MAIN_MENU_PRICE = #{mainMenuPrice},
			
			<if test="receiptImage != null">
				RECEIPT_IMAGE = #{receiptImage}
			</if>
		</set>
		WHERE POST_NO = #{postNo}
	</update>
	
	
	<!-- SQL : SELECT LIST -->
	<select id="listCommunity" parameterType="search" resultMap="communitySelectMap">
		SELECT *
		FROM (SELECT *
			  FROM COMMUNITY AS cn
			  <where>
			  	cn.POST_SHOW_STATUS = true
				<if test="searchKeyword != null">
					<!-- SEARCH : NICKNAME -->
					<if test="searchCondition == 0 and searchKeyword !=''">
						AND UPPER(cn.NICKNAME) LIKE CONCAT('%', #{searchKeyword}, '%')
					</if>
					<!-- SEARCH : POSTTITLE -->
					<if test="searchCondition == 1 and searchKeyword !=''">
						AND UPPER(cn.POST_TITLE) LIKE CONCAT('%', #{searchKeyword}, '%')
					</if>
					<!-- FILTER : OFFICIAL RESTAURANT -->
					<if test="searchFilter == 1">
						AND cn.OFFICIAL_DATE IS NOT NULL
					</if>
					<!-- FILTER : RECEIPT IMAGE -->
					<if test="searchFilter == 2">
						AND cn.RECEIPT_IMAGE IS NOT NULL
					</if>
				</if>
			  </where>
			  ORDER BY
			  <choose>
			  	<when test="searchSort == 'latest'">
			  		cn.POST_NO DESC LIMIT #{startRowNum}, #{pageSize}
			  	</when>
			  	<when test="searchSort == 'oldest'">
			  		cn.POST_NO ASC LIMIT #{startRowNum}, #{pageSize}
			  	</when>
			 <!--  	<when test="searchSort == 'mostLike'">
			  		
			  	</when>
			  	<when test="searchSort == 'worst'">
			  		
			  	</when> -->
			  	<otherwise>
			  		cn.POST_NO DESC LIMIT #{startRowNum}, #{pageSize}
			  	</otherwise>
			  </choose>
			  ) AS cnt
		LEFT OUTER JOIN (SELECT IMAGE, POST_NO
						 FROM IMAGE) AS img
						 ON (cnt.POST_NO = img.POST_NO)
	</select>
	
	
	<!-- SQL : SELECT LIST -->
	<select id="listMyPost" parameterType="map" resultMap="communitySelectMap">
		SELECT *
		FROM COMMUNITY cn
		INNER JOIN (SELECT POST_NO 
					FROM MARK
					WHERE MEMBER_ID = #{memberId} AND POST_NO IS NOT NULL
					ORDER BY MARK_NO LIMIT #{search.startRowNum}, #{search.pageSize}) AS mk
					ON (cn.POST_NO = mk.POST_NO)
		LEFT OUTER JOIN (SELECT IMAGE, POST_NO
						 FROM IMAGE) AS img
						 ON (cn.POST_NO = img.POST_NO)
	</select>
	
	
	<!-- SQL : DELETE -->
	<delete id="deleteCommunity" parameterType="community" >
		DELETE FROM REPORT WHERE POST_NO = #{postNo};
	
		DELETE FROM IMAGE WHERE POST_NO = #{postNo};
		
		DELETE FROM RESTAURANT_TIME WHERE POST_NO = #{postNo};
		
		DELETE FROM COMMUNITY WHERE POST_NO = #{postNo};
	</delete>
	
	
	<!-- SQL : INSERT -->
	<insert id="addLike" parameterType="community">
		INSERT
		INTO MARK(MEMBER_ID, POST_NO)
		VALUES(#{memberId}, #{postNo});
	</insert>
	
	
	<!-- SQL : DELETE -->
	<delete id="deleteLike" parameterType="community">
		DELETE
		FROM MARK
		WHERE MEMBER_ID = #{memberId} AND POST_NO = #{postNo};
	</delete>
	
	
	<!-- SQL : SELECT LIST -->
	<select id="listLike" parameterType="string" resultMap="markSelectMap">
		SELECT MARK_NO, MEMBER_ID, POST_NO
		FROM MARK
		WHERE POST_NO IS NOT NULL
		<if test="value != null">
			AND MEMBER_ID = #{value}
		</if>
	</select>
	<!-- <select id="listLike" parameterType="map" resultMap="communitySelectMap">
		SELECT *
		FROM COMMUNITY AS cn
		INNER JOIN (SELECT POST_NO, MARK_NO
					FROM MARK
					WHERE MEMBER_ID = #{memberId} AND POST_NO IS NOT NULL
					ORDER BY MARK_NO LIMIT #{search.startRowNum}, #{search.pageSize}) AS mk
					ON (cn.POST_NO = mk.POST_NO)
		LEFT OUTER JOIN (SELECT IMAGE, POST_NO
						 FROM IMAGE) AS img
						 ON (cn.POST_NO = img.POST_NO)	
	</select> -->
	
	<!-- SQL : SELECT LIST -->
	<select id="listMyLikePost" parameterType="map" resultMap="communitySelectMap">
		SELECT *
		FROM (SELECT cn.POST_NO, cn.MEMBER_ID, cn.NICKNAME, cn.POST_TITLE, cn.POST_TEXT, 
			  cn.POST_REG_DATE, cn.POST_SHOW_STATUS, cn.RECEIPT_IMAGE, cn.OFFICIAL_DATE
			  FROM COMMUNITY AS cn
			  INNER JOIN (SELECT POST_NO, MARK_NO, MEMBER_ID
			  			  FROM MARK
			  			  WHERE MEMBER_ID = #{member.memberId}) AS mk
			  			  ON (mk.POST_NO = cn.POST_NO)
			  WHERE cn.POST_SHOW_STATUS = 1			  
			  ORDER BY cn.POST_NO LIMIT 0, 8) AS cnt
		LEFT OUTER JOIN (SELECT IMAGE, POST_NO
						 FROM IMAGE) AS img
						 ON (cnt.POST_NO = img.POST_NO);
	</select>
	
	
	<!-- SQL : SELECT -->
	<select id="getTotalCount" parameterType="search" resultType="int">
		SELECT COUNT(*)		
		FROM COMMUNITY AS cn
			<where>
			  	cn.POST_SHOW_STATUS = true
				<!-- SEARCH : NICKNAME -->
				<if test="searchKeyword != null">
					<if test="searchCondition == 0 and searchKeyword !=''">
						AND UPPER(cn.NICKNAME) LIKE CONCAT('%', #{searchKeyword}, '%')
					</if>
					<!-- SEARCH : POSTTITLE -->
					<if test="searchCondition == 1 and searchKeyword !=''">
						AND UPPER(cn.POST_TITLE) LIKE CONCAT('%', #{searchKeyword}, '%')
					</if>
					<!-- FILTER : OFFICIAL RESTAURANT -->
					<if test="searchFilter == 1">
						AND cn.OFFICIAL_DATE IS NOT NULL
					</if>
					<!-- FILTER : RECEIPT IMAGE -->
					<if test="searchFilter == 2">
						AND cn.RECEIPT_IMAGE IS NOT NULL
					</if>
				</if>
			  </where>
	</select>
	
	
	<!-- SQL : SELECT -->
	<select id="getLikePostCount" parameterType="int" resultType="int">
		SELECT COUNT(POST_NO)
		FROM MARK
		WHERE POST_NO = #{value};
	</select>
	
	
	<!-- SQL : SELECT -->
	<select id="getLikeTotalCount" parameterType="string" resultType="int">
		SELECT COUNT(*)
		FROM COMMUNITY cm
		INNER JOIN (SELECT POST_NO
					FROM MARK
					WHERE MEMBER_ID = #{value} AND POST_NO IS NOT NULL
					ORDER BY MARK_NO) as mk
					ON (cm.POST_NO = mk.POST_NO)
		WHERE cm.POST_SHOW_STATUS = 1;
	</select>
	
	
	<!-- SQL : UPDATE -->
	<update id="officialCommunity"	parameterType="community">
		UPDATE COMMUNITY
		<set>
			OFFICIAL_DATE = now()
		</set>
		WHERE POST_NO = #{postNo};
		
		INSERT
		INTO RESTAURANT(RESTAURANT_NAME, RESTAURANT_TEL, RESERVATION_STATUS,
		STREET_ADDRESS, AREA_ADDRESS, REST_ADDRESS, LATITUDE, LONGITUDE, MENU_TYPE)
		VALUES (#{restaurantName}, #{restaurantTel}, false, #{streetAddress}, #{areaAddress}, 
		#{restAddress}, #{latitude}, #{longitude}, #{menuType});
	</update>
	
</mapper>
