<?xml version="1.0" encoding="UTF-8" ?>

<!DOCTYPE mapper
		PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
		"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="RestaurantMapper">

	<resultMap id="restaurantSelectMap" type="restaurant">
		<result property="member.memberId" 		column="MEMBER_ID" 				jdbcType="VARCHAR" />
		<result property="member.memberName"	column="OWNER_NAME" 			jdbcType="VARCHAR" />
		<result property="restaurantNo"			column="RESTAURANT_NO"			jdbcType="NUMERIC" />
		<result property="ownerImage" 			column="OWNER_IMAGE" 			jdbcType="VARCHAR" />
		<result property="restaurantName" 		column="RESTAURANT_NAME" 		jdbcType="VARCHAR" />
		<result property="restaurantText" 		column="RESTAURANT_TEXT" 		jdbcType="VARCHAR" />
		<result property="restaurantTel" 		column="RESTAURANT_TEL" 		jdbcType="VARCHAR" />
		<result property="streetAddress" 		column="STREET_ADDRESS" 		jdbcType="VARCHAR" />
		<result property="areaAddress" 			column="AREA_ADDRESS" 			jdbcType="VARCHAR" />
		<result property="restAddress" 			column="REST_ADDRESS" 			jdbcType="VARCHAR" />
		<result property="menuType" 			column="MENU_TYPE" 				jdbcType="NUMERIC" />
		<result property="reservationStatus" 	column="RESERVATION_STATUS" 	jdbcType="NUMERIC" />
		<result property="parkable" 			column="PARKABLE" 				jdbcType="BOOLEAN" />
		<result property="requestDate" 			column="REQUEST_DATE" 			jdbcType="DATE" />
		<result property="judgeStatus" 			column="JUDGE_STATUS" 			jdbcType="BOOLEAN" />
		<result property="judgeDate" 			column="JUDGE_DATE" 			jdbcType="DATE" />
		<result property="restaurantRegDate" 	column="RESTAURANT_REG_DATE"	jdbcType="DATE" />
		
		<collection property="restaurantMenus" resultMap="menuSelectMap"></collection>
		<collection property="restaurantTimes" resultMap="timeSelectMap"></collection>
		<collection property="restaurantImage" ofType="String" javaType="list">
			<result column="image" />
		</collection>
		
	</resultMap>
	
	<resultMap id="menuSelectMap" type="com.zzupzzup.service.domain.RestaurantMenu">
		<result property="menuNo" column="MENU_NO" />
		<result property="restaurant.restaurantNo" column="RESTAURANT_NO" />
		<result property="menuTitle" column="MENU_TITLE" />
		<result property="menuPrice" column="MENU_PRICE" />
		<result property="mainMenuStatus" column="MAIN_MENU_STATUS" />
	</resultMap>
	
	<resultMap id="timeSelectMap" type="com.zzupzzup.service.domain.RestaurantTime">
		<result property="restaurantTimeNo" column="RESTAURANT_TIME_NO" />
		<result property="community.postNo" column="POST_NO" />
		<result property="restaurant.restaurantNo" column="RESTAURANT_NO" />
		<result property="restaurantDay" column="RESTAURANT_DAY" />
		<result property="restaurantOpen" column="RESTAURANT_OPEN" />
		<result property="restaurantClose" column="RESTAURANT_CLOSE" />
		<result property="restaurantBreak" column="RESTAURANT_BREAK" />
		<result property="restaurantLastOrder" column="RESTAURANT_LAST" />
		<result property="restaurantDayOff" column="RESTAURANT_DAY_OFF" />
		
	</resultMap>
	
	
	<!-- SQL : INSERT -->
	<insert 	id="addRestaurant"		parameterType="restaurant" useGeneratedKeys="true" keyProperty="restaurantNo" >
		INSERT
		INTO RESTAURANT(MEMBER_ID, OWNER_NAME, OWNER_IMAGE, RESTAURANT_TEXT, RESTAURANT_NAME,
		RESTAURANT_TEL, STREET_ADDRESS, AREA_ADDRESS, MENU_TYPE)
		VALUES ( #{member.memberId}, #{member.memberName}, #{ownerImage}, #{restaurantText}, #{restaurantName},
		#{restaurantTel}, #{streetAddress}, #{areaAddress}, #{menuType})
	</insert>
	
	<insert 	id="addRestaurantMenu"	parameterType="restaurant" >
	
		DELETE FROM MENU WHERE RESTAURANT_NO = #{restaurantNo};
	
		INSERT
		INTO MENU(RESTAURANT_NO, MENU_TITLE, MENU_PRICE, MAIN_MENU_STATUS)
		VALUES
		<foreach collection="restaurantMenus" item="item" separator=",">
			(#{restaurantNo}, #{item.menuTitle}, #{item.menuPrice}, #{item.mainMenuStatus})
		</foreach>
	</insert>
	
	<insert 	id="addRestaurantTime"	parameterType="restaurant" >
	
		DELETE FROM RESTAURANT_TIME WHERE RESTAURANT_NO = #{restaurantNo};
	
		INSERT
		INTO RESTAURANT_TIME(RESTAURANT_NO, RESTAURANT_DAY, RESTAURANT_OPEN, RESTAURANT_CLOSE,
		RESTAURANT_BREAK, RESTAURANT_LAST, RESTAURANT_DAY_OFF)
		VALUES
		<foreach collection="restaurantTimes" item="item" separator=",">
			(#{restaurantNo}, #{item.restaurantDay}, #{item.restaurantOpen}, #{item.restaurantClose},
			#{item.restaurantBreak}, #{item.restaurantLastOrder}, #{item.restaurantDayOff})
		</foreach>
	</insert>
	
	<insert 	id="addImage"	parameterType="restaurant">
	
		DELETE FROM IMAGE WHERE RESTAURANT_NO = #{restaurantNo};
		
		INSERT
		INTO IMAGE(RESTAURANT_NO, IMAGE)
		VALUES
		<foreach collection="restaurantImage" item="item" separator=",">
			(#{restaurantNo}, #{item})
		</foreach>
	</insert>
	
	
	<!-- SQL : SELECT ONE -->
	<select 	id="getRestaurant"		parameterType="int"		resultMap="restaurantSelectMap">
        SELECT *
		FROM RESTAURANT AS r
		LEFT OUTER JOIN (Select * FROM RESTAURANT_TIME) AS t
		ON (r.RESTAURANT_NO = t.RESTAURANT_NO)
		LEFT OUTER JOIN (SELECT * FROM MENU) AS m
		ON (r.RESTAURANT_NO = m.RESTAURANT_NO)
		LEFT OUTER JOIN (SELECT * FROM IMAGE) AS img
		ON (r.RESTAURANT_NO = img.RESTAURANT_NO)
		WHERE r.RESTAURANT_NO = #{value};
	</select>
	
	
	<!-- SQL : UPDATE -->
	<update 	id="updateRestaurant"	parameterType="restaurant" >
		UPDATE RESTAURANT
		<set>
			OWNER_IMAGE = #{ownerImage},
			RESTAURANT_TEXT = #{restaurantText},
			RESTAURANT_NAME = #{restaurantName},
			RESTAURANT_TEL = #{restaurantTel},
			STREET_ADDRESS = #{streetAddress},
			AREA_ADDRESS = #{areaAddress},
			MENU_TYPE = #{menuType}
		</set>
		WHERE RESTAURANT_NO = #{restaurantNo}
	</update>
	
	<!-- <update id="updateMenu"		parameterType="restaurant">
		UPDATE MENU
		<set>
			MENU_TITLE = #{menuTitle},
			MENU_PRICE = #{menuPrice},
			MAIN_MENU_STATUS = #{mainMenuStatus}
		</set>
		WHERE RESTAURANT_NO = #{restaurantNo}
	</update>
	
	<update id="updateRestaurantTime" 	parameterType="restaurant">
		UPDATE RESTAURANT_TIME
		<set>
			RESTAURANT_DAY = #{restaurantDay},
			RESTAURANT_OPEN = #{restaurantOpen},
			RESTAURANT_CLOSE = #{restaurantClose},
			RESTAURANT_BREAK = #{restaurantBreak},
			RESTAURANT_LAST = #{restaurantLastOrder},
			RESTAURANT_DAY_OFF = #{restaurantDayOff}
		</set>
		WHERE RESTAURANT_NO = #{restaurantNo}
	</update> -->
	
	
	<!-- SQL : SELECT LIST -->
	<select id="listRestaurant" parameterType="search" resultMap="restaurantSelectMap">
		SELECT *
		FROM (SELECT *
			  FROM RESTAURANT AS rt
			  ORDER BY rt.RESTAURANT_NO LIMIT #{startRowNum}, #{pageSize}) AS rt
		LEFT OUTER JOIN (SELECT IMAGE, RESTAURANT_NO
						 FROM IMAGE) AS img
						 ON (rt.RESTAURANT_NO = img.RESTAURANT_NO)
	</select>
	
	
	<!-- SQL : SELECT LIST -->
	<select id="listMyRestaurant" parameterType="map" resultMap="restaurantSelectMap">
		SELECT *
		FROM (SELECT *
			  FROM RESTAURANT AS rt
			  <if test="memberId != null">
			  	<bind name="id" value="'%'+memberId+'%'"/>
			  	WHERE rt.MEMBER_ID LIKE #{id}
			  </if>
			  ORDER BY rt.RESTAURANT_NO LIMIT #{search.startRowNum}, #{search.pageSize}) AS rt
		LEFT OUTER JOIN (SELECT IMAGE, RESTAURANT_NO
						  FROM IMAGE) AS img
						  ON (rt.RESTAURANT_NO = img.RESTAURANT_NO)
	</select>
	
	
	<!-- SQL : DELETE -->
	<delete id="deleteRestaurant" parameterType="restaurant" >
		DELETE FROM IMAGE WHERE RESTAURANT_NO = #{restaurantNo};
		
		DELETE FROM RESTAURANT_TIME WHERE RESTAURANT_NO = #{restaurantNo};
		
		DELETE FROM MENU WHERE RESTAURANT_NO = #{restaurantNo};
		
		DELETE FROM RESTAURANT WHERE RESTAURANT_NO = #{restaurantNo};
	</delete>
	
	
	<!-- SQL : INSERT -->
	<insert id="checkCallDibs" parameterType="restaurant">
		INSERT
		INTO MARK(MEMBER_ID, RESTAURANT_NO)
		VALUES(#{memberId}, #{restaurantNo});
	</insert>
	
	
	<!-- SQL : DELETE -->
	<delete id="cancelCallDibs" parameterType="restaurant">
		DELETE
		FROM MARK
		WHERE MEMBER_ID = #{memberId} AND RESTAURANT_NO = #{restaurantNo};
	</delete>
	
	
	<!-- SQL : SELECT -->
	<select id="listCallDibs" parameterType="map" resultMap="restaurantSelectMap">
		SELECT *
		FROM RESTAURANT AS rt
		INNER JOIN (SELECT RESTAURANT_NO, MARK_NO
					FROM MARK
					WHERE MEMBER_ID = #{memberId} AND RESTAURANT_NO IS NOT NULL
					ORDER BY MARK_NO LIMIT #{search.startRowNum}, #{search.pageSize}) AS mk
					ON (rt.RESTAURANT_NO = mk.RESTAURANT_NO)
		LEFT OUTER JOIN (SELECT IMAGE, RESTAURANT_NO
						 FROM IMAGE) AS img
						 ON (rt.RESTAURANT_NO = img.RESTAURANT_NO)
	</select>
	
	
	<!-- SQL : SELECT -->
	<select id="getTotalCount" parameterType="search" resultType="int">
		SELECT COUNT(*)
		FROM RESTAURANT
	</select>
	
	
	<!-- SQL : SELECT LIST -->
	<select id="listRestaurantName" parameterType="search" resultMap="restaurantSelectMap">
		SELECT *
		FROM RESTAURANT AS rt
		LEFT OUTER JOIN (SELECT IMAGE, RESTAURANT_NO
		FROM IMAGE) AS img
		ON (rt.RESTAURANT_NO = img.RESTAURANT_NO)
		WHERE RESTAURANT_NAME LIKE CONCAT('%',#{search.searchKeyword},'%')
	</select>
	
</mapper>
