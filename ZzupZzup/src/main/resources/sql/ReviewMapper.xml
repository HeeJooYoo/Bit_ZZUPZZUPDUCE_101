<?xml version="1.0" encoding="UTF-8" ?>

<!DOCTYPE mapper
		PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
		"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="ReviewMapper">

	<resultMap id="reviewSelectMap" type="review">
		<result property="member.memberId"   					column="member_id" 				jdbcType="VARCHAR"/>
		<result property="reservation.reservationNo"			column="reservation_no" 		jdbcType="INTEGER" />
		<result property="reservation.restaurant.restaurantNo"	column="restaurant_no" 			jdbcType="INTEGER" />
		<result property="reviewNo" 							column="review_no" 				jdbcType="INTEGER" />
		<result property="scopeClean" 							column="scope_taste" 			jdbcType="INTEGER" />
		<result property="scopeTaste" 							column="scope_kind" 			jdbcType="INTEGER" />
		<result property="scopeKind" 							column="scope_clean" 			jdbcType="INTEGER" />
		<result property="reviewDetail" 						column="review_detail" 			jdbcType="VARCHAR"  />
		<result property="reviewRegDate" 						column="review_reg_date" 		jdbcType="DATE" />
		<result property="avgScope" 							column="avg_scope" 				jdbcType="DECIMAL" />
		<result property="reviewShowStatus" 					column="review_show_status" 	jdbcType="BOOLEAN" />
		<result property="reportCount"							column="report_count"			jdbcType="INTEGER" />
		
		<!-- <collection property="hashTag" ofType="String" javaType="list">
			<result column="hashTag"/>
		</collection> -->
		
		<collection property="hashTag" resultMap="hashTagSelectMap"></collection>
		
		<collection property="reviewImage" ofType="String" javaType="list">
			<result column="image"/>
		</collection>
	</resultMap>
	
	<resultMap id="hashTagSelectMap" type="hashtag">
		<result property="hashTagNo" column="hashtag_no" jdbcType="INTEGER"/>
		<result property="hashTag" column="hashtag" jdbcType="VARCHAR"/>
	</resultMap>
	
	
	<!-- REVIEW INSERT START -->
	<insert id="addReview"	parameterType="review" useGeneratedKeys="true" keyProperty="reviewNo">
	 	INSERT
		INTO REVIEW(member_id, reservation_no, restaurant_no, review_detail, scope_taste, scope_kind, scope_clean, avg_scope) 
		VALUES ( #{member.memberId}, #{reservation.reservationNo}, #{reservation.restaurant.restaurantNo},#{reviewDetail}, #{scopeTaste}, #{scopeKind}, #{scopeClean}, #{avgScope})
	</insert>
	
	<insert id="addHashTag"	parameterType="review">
		DELETE FROM HASHTAG_LOG WHERE review_no = #{reviewNo};
	
		INSERT
		INTO HASHTAG_LOG(review_no, hashtag_no) 
		VALUES
		<foreach collection="hashTag" item="item" separator=",">	
			 (#{reviewNo}, #{item.hashTagNo})
  		</foreach>
	</insert>
	
	<insert id="addImage"	parameterType="review">
		DELETE FROM IMAGE WHERE review_no = #{reviewNo};
	
		INSERT
		INTO IMAGE(review_no, image) 
		VALUES
		<foreach collection="reviewImage" item="item" separator=",">	
			 (#{reviewNo}, #{item})
  		</foreach>
	</insert>
	<!-- REVIEW INSERT END -->
	
	<update id="updateReview" parameterType="review">
		UPDATE REVIEW
	   	<set>
	   		review_detail = #{reviewDetail},
			scope_taste	= #{scopeTaste},
			scope_kind = #{scopeKind},
			scope_clean	= #{scopeClean},
			avg_scope = #{avgScope},
			review_show_status = #{reviewShowStatus}
	   	</set>
	   	WHERE review_no = #{reviewNo}
	</update>
	
	<delete id="deleteReview" parameterType="int">
		DELETE FROM HASHTAG_LOG WHERE review_no = #{reviewNo};
		DELETE FROM IMAGE WHERE review_no = #{reviewNo};
		DELETE FROM MARK WHERE review_no = #{reviewNo};
		DELETE FROM REPORT WHERE review_no = #{reviewNo};
		DELETE FROM ALARM WHERE review_no = #{reviewNo};
		DELETE FROM REVIEW WHERE review_no = #{reviewNo};
	</delete>

	<select id="getReview" parameterType="int" resultMap="reviewSelectMap">
		SELECT * 
		FROM REVIEW AS r 
		RIGHT OUTER JOIN (SELECT rev.REVIEW_NO, COUNT(rep.REVIEW_NO) AS report_count
						    FROM REPORT as rep RIGHT OUTER JOIN REVIEW as rev
						      ON rep.REVIEW_NO = rev.REVIEW_NO 
						   GROUP BY rev.REVIEW_NO
						 ) AS COUNT_REP ON COUNT_REP.REVIEW_NO = r.REVIEW_NO
		LEFT OUTER JOIN (SELECT review_no, image
            		FROM image) AS i ON (r.review_no = i.review_no)
		LEFT OUTER JOIN (SELECT review_no, hl.hashtag_no, h.hashtag
					FROM HASHTAG_LOG AS hl, HASHTAG AS h
                    WHERE hl.hashtag_no = h.hashtag_no) AS h ON (r.review_no = h.review_no)
		WHERE r.review_no = #{reviewNo}
	</select>
	
	
	<select id="listReview" parameterType="map" resultMap="reviewSelectMap">
		SELECT *
		FROM (SELECT r.member_id, r.reservation_no, r.restaurant_no, r.review_detail, r.review_reg_date, 
					r.review_show_status, r.scope_taste, r.scope_kind, r.scope_clean, r.avg_scope, COUNT_REP.*
			  FROM review AS r 
			  RIGHT OUTER JOIN (SELECT rev.REVIEW_NO, COUNT(rep.REVIEW_NO) AS report_count
								  FROM REPORT as rep RIGHT OUTER JOIN REVIEW as rev
								    ON rep.REVIEW_NO = rev.REVIEW_NO 
								 GROUP BY rev.REVIEW_NO
							   ) AS COUNT_REP ON COUNT_REP.REVIEW_NO = r.REVIEW_NO
			 <choose>
		  	  	<when test="restaurantNo != null">
		  			WHERE r.restaurant_no = #{restaurantNo}
		  		</when>
		  		<when test="memberId != null">
		  			WHERE r.member_id = #{memberId}
		  		</when>
		  	  </choose>   
			  ORDER BY r.review_no limit #{search.startRowNum}, #{search.pageSize}) AS r
		LEFT OUTER JOIN (SELECT image, review_no
					FROM image) AS i ON (r.review_no = i.review_no)
		LEFT OUTER JOIN (SELECT hl.HASHTAG_no, h.hashtag, review_no 
			FROM HASHTAG_LOG as hl, HASHTAG as h
            WHERE hl.hashtag_no = h.hashtag_no) as hh on(r.review_no = hh.review_no);
	</select>
	
	<select id="listMyLikeReview" parameterType="map" resultMap="reviewSelectMap">
        SELECT * 
		FROM review r 
        INNER JOIN (SELECT review_no
							FROM MARK
                            where member_id = #{memberId} and review_no IS NOT NULL
                            ORDER BY mark_no limit #{search.startRowNum}, #{search.pageSize})
                            as m on (r.review_no = m.review_no)
		LEFT OUTER JOIN (SELECT image, review_no
					FROM image) AS i ON (r.review_no = i.review_no)
		LEFT OUTER JOIN (SELECT hl.HASHTAG_no, h.hashtag, review_no 
			FROM HASHTAG_LOG as hl, HASHTAG as h
            WHERE hl.hashtag_no = h.hashtag_no) as hh on(r.review_no = hh.review_no);
	</select>  
	
	<select id="getLikeCount" parameterType="int" resultType="int">
		SELECT count(review_no)
		FROM MARK
		WHERE review_no = #{value};
	</select>
	
	<select id="listHashTag" parameterType="String" resultMap="hashTagSelectMap">
		SELECT hashtag_no, hashtag
		FROM HASHTAG
		WHERE HASHTAG Like CONCAT('%',#{value},'%')
	</select>
	
	<insert id="addLike" parameterType="map">
		INSERT 
		INTO MARK(member_id, review_no) 
		VALUES(#{memberId}, #{reviewNo});
	</insert>
	
	<delete id="deleteLike" parameterType="map">
		DELETE FROM MARK 
		WHERE member_id = #{memberId} AND REVIEW_NO = #{reviewNo};
	</delete>
	
	<select id="getTotalCount" parameterType="search" resultType="int">
		SELECT count(*)
		FROM REVIEW
	</select>
</mapper>